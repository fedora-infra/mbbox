---
- block:
    - name: retrieve mbox resource
      k8s_info:
        api_version: apps.fedoraproject.org/v1alpha1
        kind: Mbox
        namespace: "{{ meta.namespace }}"
        name: "{{ mbs_frontend_mbox }}"
      register: k8s_mboxes
    - fail:
        msg: "Failed to find mbox {{ mbs_frontend_mbox }} in namespace {{ meta.namespace }}"
      when: k8s_mboxes.resources|length == 0
  when: mbs_frontend_mbox|length > 0

- set_fact:
    postgres_secret: "{{ k8s_mboxes.resources[0].spec.psql_secret_name }}"
  when: mbs_frontend_mbox|length > 0

- block:
    - name: retrieve postgresql secret
      k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ meta.namespace }}"
        name: "{{ postgres_secret }}"
      register: k8s_psql_secrets
    - fail:
        msg: "Secret {{ postgres_secret }} not found in namespace {{ meta.namespace }}"
      when: k8s_psql_secrets.resources|length == 0
    - set_fact:
        psql_secret: "{{ k8s_psql_secrets.resources[0] }}"

- name: create temporary mbs-frontend directory
  tempfile:
    state: directory
    prefix: mbs-frontend
    suffix: deploy
  register: mbs_frontend_dir

- block:
    - name: ensure mbs-frontend configmap
      template:
        src: mbs-frontend.configmap.yaml.j2
        dest: "{{ mbs_frontend_dir.path }}/mbs-frontend.configmap.yaml"
    - k8s:
        state: present
        wait: true
        namespace: "{{ meta.namespace }}"
        src: "{{ mbs_frontend_dir.path }}/mbs-frontend.configmap.yaml"

- block:
    - name: ensure mbs configmap
      template:
        src: mbs-configmap.yaml.j2
        dest: "{{ mbs_frontend_dir.path }}/mbs-configmap.yaml"
      vars:
        mbs_psql_hostname: "{{ psql_secret.data.POSTGRES_HOST | b64decode }}"
        mbs_psql_db_name: "{{ psql_secret.data.POSTGRES_DB | b64decode }}"
        mbs_psql_user: "{{ psql_secret.data.POSTGRES_USER | b64decode }}"
        mbs_psql_pass: "{{ psql_secret.data.POSTGRES_PASSWORD | b64decode }}"
    - k8s:
        state: present
        wait: true
        namespace: "{{ meta.namespace }}"
        src: "{{ mbs_frontend_dir.path }}/mbs-configmap.yaml"

- include_tasks: cert.yml

- block:
    - name: ensure mbs-frontend deployment
      template:
        src: deployment.yaml.j2
        dest: "{{ mbs_frontend_dir.path }}/deployment.yaml"
    - k8s:
        src: "{{ mbs_frontend_dir.path }}/deployment.yaml"
        state: present
        namespace: "{{ meta.namespace }}"
        wait: true

- name: delete temporary component directory
  file:
    path: "{{ mbs_frontend_dir.path }}"
    state: absent

- block:
    - name: apply mbs-frontend http service and ingress
      template:
        src: service.yml.j2
        dest: /tmp/service.yml
    - k8s:
        state: present
        src: /tmp/service.yml
        wait: true
        namespace: "{{ meta.namespace }}"
    - template:
        src: ingress.yml.j2
        dest: /tmp/ingress.yml
      vars:
        mbs_frontend_ingress_name: mbs-frontend-http
    - k8s:
        state: present
        src: /tmp/ingress.yml
        wait: true
        namespace: "{{ meta.namespace }}"
