---
- name: create temporary kojira directory
  tempfile:
    state: directory
    prefix: kojira
    suffix: deploy
  register: kojira_dir

- block:
    - name: retrieve mbox resource
      k8s_info:
        api_version: apps.fedoraproject.org/v1alpha1
        kind: Mbox
        namespace: "{{ meta.namespace }}"
        name: "{{ kojira_builder_mbox }}"
      register: k8s_mboxes
    - fail:
        msg: "Failed to find mbox {{ kojira_builder_mbox }} in namespace {{ meta.namespace }}"
      when: k8s_mboxes.resources|length == 0
  when: kojira_builder_mbox|length > 0

- include_tasks: cert.yml

- block:
    - name: ensure kojira configmap
      template:
        src: kojira.configmap.yaml.j2
        dest: "{{ kojira_dir.path }}/kojira.configmap.yaml"
    - k8s:
        state: present
        wait: true
        namespace: "{{ meta.namespace }}"
        src: "{{ kojira_dir.path }}/kojira.configmap.yaml"

- block:
    - name: retrieve and set shared pvc name var
      k8s_info:
        api_version: apps.fedoraproject.org/v1alpha1
        kind: Mbox
        namespace: "{{ meta.namespace }}"
        name: "{{ kojira_builder_mbox }}"
      register: k8s_mboxes
    - fail:
        msg: "Failed to find mbox {{ kojira_builder_mbox }} in namespace {{ meta.namespace }}"
      when: k8s_mboxes.resources|length == 0
    - set_fact:
        kojira_shared_pvc: "{{ k8s_mboxes.resources[0].spec.koji_pvc_name }}"
  when: kojira_builder_mbox|length > 0

- block:
    - name: ensure kojira deployment
      template:
        src: kojira.deployment.yaml.j2
        dest: "{{ kojira_dir.path }}/kojira.deployment.yaml"
    - k8s:
        state: present
        wait: true
        namespace: "{{ meta.namespace }}"
        src: "{{ kojira_dir.path }}/kojira.deployment.yaml"

- block:
    - name: setup kojira user
      k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ meta.namespace }}"
        name: "{{ kojira_admin_secret }}"
      register: k8s_res
    - fail:
        msg: "Secret not found: {{ kojira_admin_secret }}"
      when: k8s_res.resources|length == 0
    - set_fact:
        koji_admin_secret: "{{ k8s_res.resources[0] | from_yaml }}"
    - copy:
        content: "{{ koji_admin_secret.data['client.pem'] | b64decode }}"
        dest: "{{ kojira_dir.path }}/admin.pem"
    #
    - k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ meta.namespace }}"
        name: "{{ kojira_cacert_secret }}"
      register: k8s_res1
    - fail:
        msg: "Secret not found: koji-hub-ca-cert"
      when: k8s_res1.resources|length == 0
    - set_fact:
        koji_ca_secret: "{{ k8s_res1.resources[0] | from_yaml }}"
    - copy:
        content: "{{ koji_ca_secret.data['cert'] | b64decode }}"
        dest: "{{ kojira_dir.path }}/ca.pem"
    #
    - koji_user:
        server: "https://{{ kojira_hub_host }}/kojihub"
        username: "{{ kojira_hub_username }}"
        permissions:
          - repo
        ssl_auth:
          cert: "{{ kojira_dir.path }}/admin.pem"
          serverca: "{{ kojira_dir.path }}/ca.pem"
          verify: false
    - file:
        state: absent
        path: "{{ koji_dir.path }}"


- name: cleanup
  file:
    path: "{{ kojira_dir.path }}"
    state: absent
