- name: create temporary cert directory
  tempfile:
    state: directory
    prefix: kojihub
    suffix: cert
  register: cert_dir

- name: Root CA creation
  block:
    - openssl_privatekey:
        path: "{{ cert_dir.path }}/ca_key.pem"
        size: 4096
    - openssl_csr:
        path: "{{ cert_dir.path }}/ca_req.pem"
        privatekey_path: "{{ cert_dir.path }}/ca_key.pem"
        common_name: "{{ koji_hub_host }}"
        create_subject_key_identifier: true
        key_usage:
          - cRLSign
          - dataEncipherment
          - digitalSignature
          - keyCertSign
          - keyEncipherment
          - nonRepudiation
        basic_constraints:
          - 'CA:TRUE'
    - openssl_certificate:
        path: "{{ cert_dir.path }}/ca_cert.pem"
        privatekey_path: "{{ cert_dir.path }}/ca_key.pem"
        csr_path: "{{ cert_dir.path }}/ca_req.pem"
        provider: selfsigned

- name: Server certificate creation
  block:
    - openssl_privatekey:
        path: "{{ cert_dir.path }}/server_key.pem"
        size: 4096
    - openssl_csr:
        path: "{{ cert_dir.path }}/server_req.pem"
        privatekey_path: "{{ cert_dir.path }}/server_key.pem"
        common_name: "{{ koji_hub_host }}"
    - openssl_certificate:
        path: "{{ cert_dir.path }}/server_cert.pem"
        csr_path: "{{ cert_dir.path }}/server_req.pem"
        ownca_path: "{{ cert_dir.path }}/ca_cert.pem"
        ownca_privatekey_path: "{{ cert_dir.path }}/ca_key.pem"
        provider: ownca

- name: Kubernetes root ca secret creation
  block:
    - k8s_info:
        api_version: v1
        kind: Secret
        name: "{{ koji_hub_ca_cert_secret }}"
        namespace: "{{ meta.namespace }}"
      register: cacert_query
    - k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ koji_hub_ca_cert_secret }}"
            namespace: "{{ meta.namespace }}"
            labels:
              app: koji-hub
          data:
            csr: "{{ lookup('file', cert_dir.path + '/server_req.pem') | b64encode }}"
            cert: "{{ lookup('file', cert_dir.path + '/ca_cert.pem') | b64encode }}"
            key: "{{ lookup('file', cert_dir.path + '/ca_key.pem') | b64encode }}"
      when: cacert_query.resources|length == 0


- name: Kubernetes server certificate secret creation
  block:
    - k8s_info:
        api_version: v1
        kind: Secret
        name: "{{ koji_hub_service_cert_secret }}"
        namespace: "{{ meta.namespace }}"
      register: servicecert_query
    - k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ koji_hub_service_cert_secret }}"
            namespace: "{{ meta.namespace }}"
            labels:
              app: koji-hub
          data:
            tls.crt: "{{ lookup('file', cert_dir.path + '/server_cert.pem') | b64encode }}"
            tls.key: "{{ lookup('file', cert_dir.path + '/server_key.pem') | b64encode }}"
          type: kubernetes.io/tls
      when: servicecert_query.resources|length == 0

- name: cleanup
  file:
    path: "{{ cert_dir.path }}"
    state: absent
