---
- name: mbox.tmpdir.create
  tempfile:
    state: directory
    prefix: mbox
    suffix: deploy
  register: mbox_dir

- include_tasks: cert.yml

- block:
    - name: mbox.secret.psql.read
      k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ meta.namespace }}"
        name: "{{ mbox_psql_secret_name }}"
      register: k8s_psql_secrets
    - fail:
        msg: "Secret {{ mbox_psql_secret_name }} not found in namespace {{ meta.namespace }}"
      when: k8s_psql_secrets.resources|length == 0

- block:
    - name: mbox.pvc
      k8s_info:
        api_version: v1
        kind: PersistentVolumeClaim
        namespace: "{{ meta.namespace }}"
        name: "{{ mbox_koji_pvc_name }}"
      register: k8s_mbox_pvc_query
    - k8s:
        state: present
        wait: true
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            namespace: "{{ meta.namespace }}"
            name: "{{ mbox_koji_pvc_name }}"
            labels:
              app: mbox
          spec:
            accessModes:
              - ReadWriteMany
            resources:
              requests:
                storage: "{{ mbox_koji_pvc_size }}"
            selector:
              matchLabels:
                app: mbox
      when: k8s_mbox_pvc_query.resources|length == 0

- block:
    - name: mbox.mbs.configmap.create
      k8s_info:
        api_version: v1
        kind: Configmap
        namespace: "{{ meta.namespace }}"
        name: "{{ mbox_mbs.configmap }}"
      register: k8s_mbs_cm
    - template:
        src: mbs.configmap.yaml.j2
        dest: "{{ mbox_dir.path }}/mbs.configmap.yaml"
      vars:
        mbs_configmap: "{{ mbox_mbs.configmap }}"
        mbs_fedora_versions: "{{ mbox_mbs.fedora_versions }}"
        mbs_hub_host: "{{ mbox_koji_hub_host }}"
        mbs_messaging_system: "{{ mbox_mbs.backend_config_messaging }}"
        mbs_topic_prefix: "{{ mbox_mbs.topic_prefix }}"
        mbs_scm_url: "{{ mbox_mbs.scm_repo_url }}"
        mbs_rpms_default_repository: "{{ mbox_mbs.rpm_repo_url }}"
        mbs_rpms_default_cache: "{{ mbox_mbs.pkg_repo_url }}"
        mbs_modules_default_repository: "{{ mbox_mbs.scm_repo_url }}"
        mbs_psql_user: "{{ k8s_psql_secrets.resources[0].data.POSTGRES_USER | b64decode }}"
        mbs_psql_pass: "{{ k8s_psql_secrets.resources[0].data.POSTGRES_PASSWORD | b64decode }}"
        mbs_psql_hostname: "{{ k8s_psql_secrets.resources[0].data.POSTGRES_HOST | b64decode }}"
        mbs_psql_db_name: "{{ k8s_psql_secrets.resources[0].data.POSTGRES_DB | b64decode }}"
        mbs_pdc_url: "{{ mbox_mbs.pdc_url }}"
        mbs_oidc_required_scope: "{{ mbox_mbs.oidc_required_scope }}"
      when: k8s_mbs_cm.resources|length == 0
    - k8s:
        src: "{{ mbox_dir.path }}/mbs.configmap.yaml"
        wait: true
        state: present
        namespace: "{{ meta.namespace }}"
      when: k8s_mbs_cm.resources|length == 0
  when: mbox_mbs|length > 0

- name: mbs.tmp_dir.delete
  file:
    path: "{{ mbox_dir.path }}"
    state: absent
