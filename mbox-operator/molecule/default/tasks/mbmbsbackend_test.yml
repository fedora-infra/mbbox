---
- name: Create the apps.fedoraproject.org/v1alpha1.MBMbsBackend
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Running
      reason: Successful
      status: "True"
  vars:
    cr_file: 'apps_v1alpha1_mbmbsbackend.yaml'

- block:
    - name: 'TEST: mbs-backend.mbs-configmap'
      k8s_info:
        api_version: v1
        kind: ConfigMap
        namespace: "{{ namespace }}"
        name: mbs-configmap
      register: mbs_configmap
    - assert:
        that:
          - mbs_configmap.resources|length == 1
          - "'default_module_f32.yml' in mbs_configmap.resources[0].data"
          - "'koji.conf' in mbs_configmap.resources[0].data"
          - "'config.py' in mbs_configmap.resources[0].data"

- block:
    - name: 'TEST: mbs-backend.secret.client-cert'
      k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ namespace }}"
        name: mbs-client-cert
      register: mbs_client_secrets
    - assert:
        that:
          - mbs_client_secrets.resources|length == 1
          - mbs_client_secrets.resources[0].metadata.labels['app'] == 'mbs-backend'
          - "'client.pem' in mbs_client_secrets.resources[0].data"

- block:
    - name: 'TEST: mbs-backend.deployment'
      k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ namespace }}"
        label_selectors:
          - app = mbs-backend
      register: mbs_backend_pods
    - assert:
        that:
          - mbs_backend_pods.resources|length == 1
          - mbs_backend_pods.resources[0].metadata.labels['app'] == 'mbs-backend'
